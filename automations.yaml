 # This automation script runs when a value is received via MQTT on retained topic
 # It sets the value slider on the GUI. This slides also had its own automation when the value is changed.
- alias: Set roller shutter slider
  hide_entity: True
  initial_state: True
  trigger:
    - platform: mqtt
      topic: "catingham_palace/kitchen/left_rolling_shutter/position"      
    - platform: mqtt
      topic: "catingham_palace/kitchen/right_rolling_shutter/position"
    - platform: mqtt
      topic: "catingham_palace/living_room/left_rolling_shutter/position"       
    - platform: mqtt
      topic: "catingham_palace/living_room/right_rolling_shutter/position"       
    - platform: mqtt
      topic: "catingham_palace/green_room/rolling_shutter/position"
    - platform: mqtt
      topic: "catingham_palace/pink_room/rolling_shutter/position"      
    - platform: mqtt
      topic: "catingham_palace/bedroom/rolling_shutter/position"
    - platform: mqtt
      topic: "catingham_palace/bathroom/rolling_shutter/position"               
  action:
     service: input_number.set_value
     data_template:
       entity_id: >-
         {%- set topic = trigger.topic.split("/") -%}
         input_number.{{topic[1] ~ "_" ~ topic[2]}}
       value: '{{ trigger.payload | int }}'

 # This automation script runs when the target slider is moved.
 # It publishes its value to the same MQTT topic it is also subscribed to.
- alias: Roller shutters slider moved
  hide_entity: True
  initial_state: True
  trigger:
    - platform: state
      entity_id: input_number.kitchen_left_rolling_shutter      
    - platform: state
      entity_id: input_number.kitchen_right_rolling_shutter
    - platform: state
      entity_id: input_number.living_room_left_rolling_shutter
    - platform: state
      entity_id: input_number.living_room_right_rolling_shutter
    - platform: state  
      entity_id: input_number.bedroom_rolling_shutter  
    - platform: state
      entity_id: input_number.pink_room_rolling_shutter
    - platform: state  
      entity_id: input_number.green_room_rolling_shutter
    - platform: state
      entity_id: input_number.bathroom_rolling_shutter
  action:
    service: mqtt.publish
    data_template:
      topic: >-
        {%- set domain, device = trigger.entity_id.split('.') -%}
        {%- set location = (device | regex_replace("_((left|right)_)?rolling_shutter$",'')) -%}
        {%- set sensor_name = device.replace(location,"")[1:] -%}
        catingham_palace/{{location}}/{{sensor_name}}/position/set
      retain: true
      payload: >-
        {%- set domain, device = trigger.entity_id.split('.') -%}
        {%- set location = (device | regex_replace("_((left|right)_)?rolling_shutter$",'')) -%}
        {%- if is_state(("input_boolean.cat_passage_" ~ location),"on") -%}
        {{ (trigger.to_state.state | int, states.input_number.cat_passage.state | int) | max }}
        {%- else -%}
        {{ trigger.to_state.state | int }}
        {%- endif -%}

- id: 'leave_cat_passage_living_room'
  alias: 'Leave cat passage living room'
  initial_state: True
  trigger:
    - platform: state
      entity_id: input_boolean.cat_passage_living_room
      to: 'on'
    - platform: state
      entity_id: input_number.living_room_right_rolling_shutter
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.cat_passage_living_room
        state: 'on' 
      - condition: template
        value_template: "{{ float(states.input_number.living_room_right_rolling_shutter.state) < float(states.input_number.cat_passage.state) }}"
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.living_room_right_rolling_shutter
        value: '{{ (states.input_number.cat_passage.state | int) }}'
                        

- id: 'leave_cat_passage_kitchen'
  alias: 'Leave cat passage kitchen'
  initial_state: False
  trigger:
    - platform: state
      entity_id: input_boolean.cat_passage_kitchen
      to: 'on'
    - platform: state
      entity_id: input_number.kitchen_right_rolling_shutter
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.cat_passage_kitchen
        state: 'on' 
      - condition: template
        value_template: "{{ float(states.input_number.kitchen_right_rolling_shutter.state) < float(states.input_number.cat_passage.state) }}"
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.kitchen_right_rolling_shutter
        value: '{{ (states.input_number.cat_passage.state | int) }}'

- id: 'leave_cat_passage_green_room'
  alias: 'Leave cat passage green room'
  initial_state: False
  trigger:
    - platform: state
      entity_id: input_boolean.cat_passage_green_room
      to: 'on'
    - platform: state
      entity_id: input_number.green_room_rolling_shutter
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.cat_passage_green_room
        state: 'on' 
      - condition: template
        value_template: "{{ float(states.input_number.green_room_rolling_shutter.state) < float(states.input_number.cat_passage.state) }}"
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.green_room_rolling_shutter
        value: '{{ (states.input_number.cat_passage.state | int) }}'

- id: 'leave_cat_passage_bedroom'
  alias: 'Leave cat passage bedroom'
  initial_state: False
  trigger:
    - platform: state
      entity_id: input_boolean.cat_passage_bedroom
      to: 'on'
    - platform: state
      entity_id: input_number.bedroom_rolling_shutter
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.cat_passage_bedroom
        state: 'on' 
      - condition: template
        value_template: "{{ float(states.input_number.bedroom_rolling_shutter.state) < float(states.input_number.cat_passage.state) }}"      
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.bedroom_rolling_shutter
        value: '{{ (states.input_number.cat_passage.state | int) }}'

- alias: 'Telegram bot that reply pong to ping'
  hide_entity: true
  initial_state: True
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
    - service: notify.catinghampalacebot
      data:
        message: 'pong'

- alias: 'Update Available Notifications'
  hide_entity: True
  initial_state: True
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    - service: notify.telegram2rubens
      data:
        message: 'A new update for Home Assistant is available.'

- id: 'weekend_roller_shutter_up'
  alias: "Weekend roller shutter up"
  initial_state: False
  trigger:
   - platform: state
     entity_id: automation.weekend_roller_shutter_up
     to: 'on'
  action:
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.living_room_left_rolling_shutter
        position: 100
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.living_room_right_rolling_shutter
        position: 100        
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.kitchen_left_rolling_shutter
        position: 100
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.kitchen_right_rolling_shutter
        position: 100
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.green_room_rolling_shutter
        position: 100
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.pink_room_rolling_shutter
        position: 100
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.bathroom_rolling_shutter
        position: 100
                
    - service: input_select.select_option
      data:
        entity_id: input_select.roller_shutters_scene
        option: "day"      
    - service: automation.turn_off
      entity_id: automation.weekend_roller_shutter_up

- id: 'all_roller_shutter_up'
  alias: "All roller shutter up"
  initial_state: False
  trigger:
   - platform: state
     entity_id: automation.all_roller_shutter_up
     to: 'on'
  action:
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.bedroom_rolling_shutter
        position: 100        
    - service: automation.turn_on
      entity_id: automation.weekend_roller_shutter_up
    - service: automation.turn_off
      entity_id: automation.all_roller_shutter_up
    

- id: 'all_roller_shutter_down'
  alias: "All roller shutter down"
  initial_state: False
  trigger:
   - platform: state
     entity_id: automation.all_roller_shutter_down
     to: 'on'
  action:
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.living_room_left_rolling_shutter
        position: 0
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.living_room_right_rolling_shutter
        position: 0        
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.kitchen_left_rolling_shutter
        position: 0
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.kitchen_right_rolling_shutter
        position: 0
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.green_room_rolling_shutter
        position: 0
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.pink_room_rolling_shutter
        position: 0
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.bathroom_rolling_shutter
        position: 0
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.bedroom_rolling_shutter
        position: 0          
      
    - service: input_select.select_option
      data:
        entity_id: input_select.roller_shutters_scene
        option: "night"      
    - service: automation.turn_off
      entity_id: automation.all_roller_shutter_down

- id: 'roller_shutter_sunrise'
  alias: 'Roller shutter sunrise'
  initial_state: True
  trigger:
    - platform: sun
      event: sunrise
      offset: "-00:30:00"
    - platform: time
      at: "06:00:00"
  condition:  
    condition: and
    conditions:
      - condition: sun
        after: sunrise
        after_offset: "-00:30:00"
      - condition: time
        after: "06:00:00"    
  action: 
    - service: automation.turn_on
      entity_id: automation.weekend_roller_shutter_up
    - condition: or
      conditions:
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
        - condition: state
          entity_id: 'input_boolean.avoid_bedroom_roller_shutter_up_during_weekend'
          state: 'off'
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.bedroom_rolling_shutter
        position: 100

- id: 'roller_shutter_sunset'
  alias: 'Roller shutter sunset'
  initial_state: True
  trigger:
    platform: sun
    event: sunset
#    offset: "00:30:00"
  action: 
    service: automation.turn_on
    entity_id: automation.all_roller_shutter_down

- id: "notify_homeassistant_startup"
  alias: "Notify HomeAssistant startup"
  initial_state: True
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: notify.telegram2rubens
      data: 
        message: "HomeAssistant started"  

- id: 'living_room_auto_cat_passage_on_window_change'
  alias: 'Living room automatic cat passage on window state'
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.living_room_right_window
    - platform: state
      entity_id: switch.automatic_cat_passage
      to: 'on'
    - platform: homeassistant
      event: start  
  condition:    
    condition: state
    entity_id: switch.automatic_cat_passage
    state: 'on'
  action:
    - service_template: >
        {% if is_state('binary_sensor.living_room_right_window', 'on') %}
          input_boolean.turn_on
        {% else %}
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.cat_passage_living_room 

- id: 'kitchen_auto_cat_passage_on_window_change'
  alias: 'Kitchen automatic cat passage on window state'
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_right_window
    - platform: state
      entity_id: switch.automatic_cat_passage
      to: 'on'
    - platform: homeassistant
      event: start        
  condition:    
    condition: state
    entity_id: switch.automatic_cat_passage
    state: 'on'
  action:
    - service_template: >
        {% if is_state('binary_sensor.kitchen_right_window', 'on') %}
          input_boolean.turn_on
        {% else %}
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.cat_passage_kitchen 

- id: 'bedroom_auto_cat_passage_on_window_change'
  alias: 'Bedroom automatic cat passage on window state'
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_window
    - platform: state
      entity_id: switch.automatic_cat_passage
      to: 'on'
    - platform: homeassistant
      event: start        
  condition:    
    condition: state
    entity_id: switch.automatic_cat_passage
    state: 'on'
  action:
    - service_template: >
        {% if is_state('binary_sensor.bedroom_window', 'on') %}
          input_boolean.turn_on
        {% else %}
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.cat_passage_bedroom 

- id: 'green_room_auto_cat_passage_on_window_change'
  alias: 'Green room automatic cat passage on window state'
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.green_room_window
    - platform: state
      entity_id: switch.automatic_cat_passage
      to: 'on'
    - platform: homeassistant
      event: start        
  condition:    
    condition: state
    entity_id: switch.automatic_cat_passage
    state: 'on'
  action:
    - service_template: >
        {% if is_state('binary_sensor.green_room_window', 'on') %}
          input_boolean.turn_on
        {% else %}
          input_boolean.turn_off
        {% endif %}
      entity_id: input_boolean.cat_passage_green_room 


- id: 'greenhouse_auto_humidity_power_off'
  alias: 'Greenhouse auto humidity power off'
  initial_state: True
  trigger:
    - platform: template
      value_template: '{% if (states("sensor.greenhouse_humidity")| int > (states("input_number.greenhouse_humidifier_target_humidity")|int) + 3) %}true{% endif %}'
  condition:    
    condition: state
    entity_id: switch.greenhouse_humidifier_mode
    state: 'on'      
  action:
    - service: switch.turn_off
      entity_id: switch.greenhouse_humidifier_power
 
- id: 'greenhouse_auto_humidity_power_on'
  alias: 'Greenhouse auto humidity power on'
  initial_state: True
  trigger:
    - platform: template
      value_template: '{% if (states("sensor.greenhouse_humidity")| int < (states("input_number.greenhouse_humidifier_target_humidity")|int) - 3) %}true{% endif %}'
  condition:    
    condition: state
    entity_id: switch.greenhouse_humidifier_mode
    state: 'on'      
  action:
    - service: switch.turn_on
      entity_id: switch.greenhouse_humidifier_power
      
- id: 'living_room_roller_shutter_up_delayed'
  alias: 'Living room roller shutter up delayed'
  initial_state: True
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.tv_shut_down_delay
  action:
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.living_room_left_rolling_shutter
        position: 100
      
- id: 'living_room_roller_shutter_tv_on_aware'
  alias: 'Living room roller shutter TV ON aware'
  initial_state: True
  trigger:
    - platform: state
      entity_id: media_player.living_room_tv
      to: 'on'
  condition: 
    condition: state
    entity_id: input_select.roller_shutters_scene
    state: 'day'
  action:
    - service: timer.cancel
      entity_id: timer.tv_shut_down_delay
    - service: script.roller_shutter_set_position
      data:
        entity_id: input_number.living_room_left_rolling_shutter
        position: 0

- id: 'living_room_roller_shutter_tv_off_aware'
  alias: 'Living room roller shutter TV OFF aware'
  initial_state: True
  trigger:
    - platform: state
      entity_id: media_player.living_room_tv
      to: 'off'    
  condition: 
    condition: state
    entity_id: input_select.roller_shutters_scene
    state: 'day'
  action:
    - service: timer.start
      entity_id: timer.tv_shut_down_delay

- alias: RFID Stair lock
  hide_entity: true
  initial_state: 'on'
  trigger:
  - platform: mqtt
    topic: catingham_palace/stair/rfid_reader
  condition:
      condition: template
      value_template: '{{ trigger.payload_json.username in ("Rubens", "Valentina") }}'
  action:
  - service: lock.unlock
    data:
      entity_id: lock.stair_front_door      
      
